/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <17 5 4 3 2 1 13 14 15 16 29 28 27 26 25 30 18 6 7 19 31 32 20 8 9 21 33 34 22 10>;
        };
    };

    combos {
        compatible = "zmk,combos";

        CtrlAltDel {
            bindings = <&kp LC(LA(DEL))>;
            key-positions = <12 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q           &kp W           &kp E             &kp R        &kp T        &kp Y    &kp U        &kp I              &kp O            &kp P               &kp BSPC
&kp ESC    &ht LEFT_WIN A  &ht LEFT_ALT S  &ht LEFT_SHIFT D  &ht LCTRL F  &kp G        &kp H    &ht RCTRL J  &ht RIGHT_SHIFT K  &ht RIGHT_ALT L  &ht RIGHT_WIN SEMI  &kp SQT
&kp LSHFT  &kp Z           &kp X           &kp C             &kp V        &kp B        &kp N    &kp M        &kp COMMA          &kp DOT          &kp FSLH            &kp ENTER
                                           &kp LGUI          &mo 4        &kp SPACE    &kp RET  &mo 2        &mo 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6   &kp N7      &kp N8           &kp N9             &kp N0            &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans   &kp LEFT    &kp DOWN         &kp UP             &kp RIGHT         &trans
&kp CAPS    &trans        &trans        &trans        &trans        &trans          &trans   &kp C_NEXT  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET  &trans      &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp ESC   &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp CAPS  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                            &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        Nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &trans          &trans           &trans             &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &kp LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW       &kp RIGHT         &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_PREVIOUS  &kp C_NEXT      &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &trans
                        &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };

        Numpad {
            bindings = <
&kp F1    &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &kp MINUS      &kp N7  &kp N8   &kp N9  &kp KP_EQUAL     &trans
&kp F7    &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &kp KP_DIVIDE  &kp N4  &kp N5   &kp N6  &kp KP_MULTIPLY  &trans
&kp CAPS  &trans  &trans  &trans   &trans   &trans     &kp KP_MINUS   &kp N1  &kp N2   &kp N3  &kp KP_PLUS      &kp KP_ENTER
                          &trans   &trans   &trans     &kp ENTER      &kp N0  &kp DOT
            >;
        };
    };
};
